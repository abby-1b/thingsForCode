const { readFileSync, writeFileSync } = require('fs')

let file = process.argv[process.argv.length - 1]
let nFile = file.split(".")
nFile[nFile.length - 1] = "min"
nFile[nFile.length] = "js"
nFile = nFile.join('.')

let f = readFileSync(file, 'utf8')
f = f
	.replace(/(?<!:)\/\/.*/gm, "")
	.split('\n')
	.map(e => e.trim())
	.filter(e => e.length > 0)
	.join('\n')
	
	.replace(/\n}/g, "}")
	.replace(/{\n/g, "{")
	.replace(/\,\n/g, ",")
	.replace(/\= /g, "=")
	.replace(/ \=/g, "=")
	.replace(/\{ /g, "{")
	.replace(/ \{/g, "{")
	.replace(/\} /g, "}")
	.replace(/ \}/g, "}")
	.replace(/\+ /g, "+")
	.replace(/ \+/g, "+")
	.replace(/\( /g, "(")
	.replace(/ \(/g, "(")
	.replace(/\) /g, ")")
	.replace(/ \)/g, ")")
	.replace(/\< /g, "<")
	.replace(/ \</g, "<")
	.replace(/\> /g, ">")
	.replace(/ \>/g, ">")
	.replace(/ \&\& /g, "&&")
	.replace(/ \|\| /g, "||")
	.replace(/ \- /g, "-")
	.replace(/ \+ /g, "+")
	.replace(/ \/ /g, "/")
	.replace(/\, /g, ",")
	.replace(/function\(.*?\)\{/g, e => "(" + e.split("(")[1].slice(0,-1) + "=>{")
	.replace(/\: /g, ":")
	.replace(/\\\\/g, "\\\\\\\\")

console.log(f.length)
writeFileSync(nFile, f)
